name: "Save Fuzz Test Results"
description: "Save findings and coverage of a CI Fuzz workflow run"
inputs:
  ci_sense_api_token:
    description: "Token for the CI Sense API."
    required: true
  project_name:
    description: "The CI Sense project name."
    required: true
  started_run:
    description: "Started run as a JSON string."
    required: true
  ci_sense_http_url:
    description: "The CI Sense HTTP endpoint."
    default: "https://app.code-intelligence.com"
  ci_sense_grpc_url:
    description: "The CI Sense gRPC endpoint."
    default: "https://app.code-intelligence.com"

runs:
  using: "docker"
  image: "docker://cifuzz/github-action:v5"
  entrypoint: "/bin/bash"
  args:
    - "-c"
    - |
      # Map the started v3 API run to a v1 API campaign_run.
      RUN_NID=$(echo '${{ inputs.started_run }}' | jq -r ".run.nid")
      CAMPAIGN_RUNS_URL="${{ inputs.ci_sense_http_url }}/v1/projects/${{ inputs.project_name }}/campaign_runs"
      curl "$CAMPAIGN_RUNS_URL?filter=nid=$RUN_NID" \
          -H "Authorization: Bearer ${{ inputs.ci_sense_api_token }}" \
          | jq ".campaign_runs[0]" \
          > campaign_run.json

      echo "RUN NID $RUN_NID"
      curl "$CAMPAIGN_RUNS_URL?filter=nid=$RUN_NID" \
          -H "Authorization: Bearer ${{ inputs.ci_sense_api_token }}" | jq

      cat campaign_run.json | jq -r ".name"
      export INPUT_TEST_COLLECTION_RUN=$(cat campaign_run.json | jq -r ".name")
      export INPUT_PROJECT_NAME="projects/${{ inputs.project_name }}"
      export INPUT_FUZZING_SERVER_ADDRESS=${{ inputs.ci_sense_grpc_url }}
      export INPUT_DASHBOARD_ADDRESS=${{ inputs.ci_sense_http_url }}
      export INPUT_CI_FUZZ_API_TOKEN=${{ inputs.ci_sense_api_token }}
      export_results.sh
